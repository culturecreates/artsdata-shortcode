
# SPARQL behind the Artsdata Ranked API api.artsdata.ca/ranked/K10-194
# modified to get ONLY the direct Type (not inferred)
# input: an entity 
# output: graph of ranked results with 2 levels of nested blank nodes 
PREFIX adr: <http://kg.artsdata.ca/resource/>
PREFIX ado: <http://kg.artsdata.ca/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX onto: <http://www.ontotext.com/>
PREFIX sesame: <http://www.openrdf.org/schema/sesame#>
# Graph with nested blank nodes
construct {
 ?s ?b ?c .
 ?c ?cbp ?cbo .
 ?c ?cbp ?cbob .
    
 ?c skos:prefLabel ?skosLabels .
 ?cbob ?cbobp ?cbobo .
 ?cbob sesame:directType ?dt .
 ?s ado:hasRankedProperties ?b .
 ?b a rdf:Property .
 ?b ado:isPartOfGraph  ?gtop .
 ?gtop schema:maintainer ?maintainer .
 
}
#select  ?s ?b ?c ?gtop 
 
where { 
     
    ?gtop schema:maintainer ?maintainer .
    graph ?gtop {
       
        ?id ?b ?c .
        bind (adr:K10-440  as ?s)
        OPTIONAL {
            ?c ?cbp ?cbo .
        }
        OPTIONAL {
           # graph onto:implicit {
                 ?c ?cbp ?cbob .
            ?cbob ?cbobp ?cbobo . 
           
          #  }
            OPTIONAL {
                  ?cbob   sesame:directType ?dt .
            } 
            
           
        }
        
    }
    # include controlled vocabulary labels from other graphs
    OPTIONAL {
        ?c a skos:Concept ;
           skos:prefLabel ?skosLabels .
    }
    ?gtop schema:contentRating/schema:ratingValue ?ratingTop
    filter( ?b = ?p && ?ratingTop = ?pick )
    
    
    

    # Sub query to get all sameAs
    {
        select ?id where {
            {
                values ?id {
                    adr:K10-440
                }
            }
            UNION {
                ?id schema:sameAs adr:K10-440 .
            }
            UNION {
                bind (str(adr:K10-440) as ?id_str) 
                ?id schema:sameAs ?id_str  .
            }
            UNION {
                adr:K10-440  schema:sameAs ?id_str .
                bind(URI(?id_str) as ?id)
            }
            filter (isURI(?id))
        } 
    }
    # Build a table of properties and graph with best (lowest) rank
    {
        select  ?p  (min(?rating) as ?pick) 
        where {
            graph ?g {
                ?id ?p ?o .
                bind (adr:K10-440  as ?s)
            }
            ?g schema:contentRating/schema:ratingValue ?rating
            # Sub query to get all sameAs
            {
                select ?id where {
                    {
                        values ?id {
                            adr:K10-440  
                        }
                    }
                    UNION {
                        ?id schema:sameAs adr:K10-440 .
                    }
                    UNION {
                        bind (str(adr:K10-440) as ?id_str) 
                        ?id schema:sameAs ?id_str  .
                    }
                    UNION {
                        adr:K10-440  schema:sameAs ?id_str .
                        bind(URI(?id_str) as ?id)
                    }
                    filter (isURI(?id))
                } 
            }
        } group by ?p 
    }
}
